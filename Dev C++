#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define TAM 3

char tabuleiro[TAM][TAM];
int posicoesJogador1[3], posicoesJogador2[3];
int numJogadas1 = 0, numJogadas2 = 0;
int i, j, linha, coluna;
int jogadaValida;

void inicializarTabuleiro() {
    for (i = 0; i < TAM; i++) {
        for (j = 0; j < TAM; j++) {
            tabuleiro[i][j] = ' ';
        }
    }
    numJogadas1 = 0;
    numJogadas2 = 0;
}

void imprimirTabuleiro() {
    printf("\nTabuleiro:\n");
    for (i = 0; i < TAM; i++) {
        for (j = 0; j < TAM; j++) {
            printf(" %c ", tabuleiro[i][j]);
            if (j < TAM - 1) printf("|");
        }
        printf("\n");
        if (i < TAM - 1) printf("---|---|---\n");
    }
}

int verificarVitoria(char jogador) {
    for (i = 0; i < TAM; i++) {
        if (tabuleiro[i][0] == jogador && tabuleiro[i][1] == jogador && tabuleiro[i][2] == jogador)
            return 1;
    }
    for (j = 0; j < TAM; j++) {
        if (tabuleiro[0][j] == jogador && tabuleiro[1][j] == jogador && tabuleiro[2][j] == jogador)
            return 1;
    }
    if (tabuleiro[0][0] == jogador && tabuleiro[1][1] == jogador && tabuleiro[2][2] == jogador)
        return 1;
    if (tabuleiro[0][2] == jogador && tabuleiro[1][1] == jogador && tabuleiro[2][0] == jogador)
        return 1;

    return 0;
}

void moverPeca(int jogador) {
    int novaLinha, novaColuna, escolha;
    int* posicoes = (jogador == 0) ? posicoesJogador1 : posicoesJogador2;
    char simbolo = (jogador == 0) ? 'X' : 'O';

    printf("Suas pecas estao nas posicoes:\n");
    int k;
    for (k = 0; k < 3; k++) {
        int l = posicoes[k] / TAM;
        int c = posicoes[k] % TAM;
        printf("%d: (%d, %d)\n", k, l, c);
    }

    printf("Escolha o numero da peca que deseja mover (0, 1 ou 2): ");
    scanf("%d", &escolha);

    if (escolha < 0 || escolha > 2) {
        printf("Escolha invalida! Tente novamente.\n");
        moverPeca(jogador);
        return;
    }

    printf("Digite a nova linha (0-2): ");
    scanf("%d", &novaLinha);
    printf("Digite a nova coluna (0-2): ");
    scanf("%d", &novaColuna);

    if (novaLinha < 0 || novaLinha >= TAM || novaColuna < 0 || novaColuna >= TAM || tabuleiro[novaLinha][novaColuna] != ' ') {
        printf("Posicao invalida ou ocupada! Tente novamente.\n");
        moverPeca(jogador);
        return;
    }

    int velhaLinha = posicoes[escolha] / TAM;
    int velhaColuna = posicoes[escolha] % TAM;
    tabuleiro[velhaLinha][velhaColuna] = ' ';

    tabuleiro[novaLinha][novaColuna] = simbolo;
    posicoes[escolha] = novaLinha * TAM + novaColuna;
}





void jogarJogador(int jogadorAtual, char simbolo) {
    if ((jogadorAtual == 0 && numJogadas1 >= 3) || (jogadorAtual == 1 && numJogadas2 >= 3)) {
        printf("Jogador %d (%c), faca sua movimentacao.\n", jogadorAtual + 1, simbolo);
        moverPeca(jogadorAtual);
        return;
    }

    printf("Jogador %d (%c), faca sua jogada.\n", jogadorAtual + 1, simbolo);
    printf("Digite a linha (0 a 2): ");
    scanf("%d", &linha);
    printf("Digite a coluna (0 a 2): ");
    scanf("%d", &coluna);

    if (linha < 0 || linha >= TAM || coluna < 0 || coluna >= TAM || tabuleiro[linha][coluna] != ' ') {
        printf("Jogada invalida! Tente novamente.\n");
        system("pause");
        jogarJogador(jogadorAtual, simbolo);
    } else {
        int pos = linha * TAM + coluna;
        tabuleiro[linha][coluna] = simbolo;
        if (jogadorAtual == 0) {
            posicoesJogador1[numJogadas1++] = pos;
        } else {
            posicoesJogador2[numJogadas2++] = pos;
        }
    }
}


void jogarComputador() {
    jogadaValida = 0;
    while (!jogadaValida) {
        linha = rand() % TAM;
        coluna = rand() % TAM;

        if (tabuleiro[linha][coluna] == ' ') {
            tabuleiro[linha][coluna] = 'O';
            jogadaValida = 1;
            printf("Computador fez sua jogada na posicao (%d, %d).\n", linha, coluna);
            system("pause");
        }
    }
}

void mostrarMenu() {
    printf("Bem-vindo ao Jogo da Velha 2.0!\n");
    printf("Escolha uma opcao:\n");
    printf("1. Jogar contra outro jogador\n");
    printf("2. Jogar contra o computador\n");
    printf("3. Ajuda\n");
    printf("4. Autores\n");
    printf("5. Sair\n");
    printf("Escolha: ");
}

void mostrarAjuda() {
    printf("\nAjuda - Como jogar Jogo da Velha 2.0:\n");
    printf("1. O jogo e jogado em um tabuleiro 3x3.\n");
    printf("2. Cada jogador comeca com 3 pecas. O primeiro jogador usa 'X' e o segundo jogador usa 'O'.\n");
    printf("3. Os jogadores devem colocar suas pecas em espacos vazios do tabuleiro.\n");
    printf("4. Quando o jogador ja tiver 3 pecas, ele deve mover uma das suas pecas existentes.\n");
    printf("5. O jogo termina quando um dos jogadores consegue alinhar suas pecas.\n\n");
    system("pause");
}

void mostrarAutores() {
    printf("\nAutores:\n");
    printf("Victor Faccine Farias\n\n");
    system("pause");
}

int main() {
    int jogadorAtual;
    int modoDeJogo;

    srand(time(NULL));

    while (1) {
        system("cls");
        mostrarMenu();
        scanf("%d", &modoDeJogo);

        if (modoDeJogo == 3) {
            system("cls");
            mostrarAjuda();
            continue;
        } else if (modoDeJogo == 4) {
            system("cls");
            mostrarAutores();
            continue;
        } else if (modoDeJogo == 5) {
            printf("Saindo do jogo...\n");
            return 0;
        }

        inicializarTabuleiro();
        jogadorAtual = 0;

        while (1) {
            system("cls");
            imprimirTabuleiro();

            char simbolo = (jogadorAtual == 0) ? 'X' : 'O';

            if (modoDeJogo == 1 || (modoDeJogo == 2 && jogadorAtual == 0)) {
                jogarJogador(jogadorAtual, simbolo);
            } else if (modoDeJogo == 2 && jogadorAtual == 1) {
                jogarComputador();
            }

            if (verificarVitoria(simbolo)) {
                system("cls");
                imprimirTabuleiro();
                if (modoDeJogo == 1) {
                    printf("Jogador %d (%c) venceu!\n", jogadorAtual + 1, simbolo);
                } else {
                    if (jogadorAtual == 0) {
                        printf("Voce (Jogador 1) venceu!\n");
                    } else {
                        printf("Computador venceu!\n");
                    }
                }
                system("pause");
                break;
            }

            jogadorAtual = 1 - jogadorAtual;
        }
    }

    return 0;
}

